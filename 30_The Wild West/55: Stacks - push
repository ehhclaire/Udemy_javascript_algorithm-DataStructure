class Node {
  constructor(value) {
    this.value = value;
    this.next = null;
  }
}

class Stack {
  constructor() {
    this.first = null;
    this.last = null;
    this.size = 0;
  }

  push(value) {
    const newNode = new Node(value);
    if (!this.first) {
      this.first = newNode;
      this.last = newNode;
    } else {
      newNode.next = this.first;
      this.first = newNode;
    }
    this.size++;
    return this.size;
  }
}

// 테스트
var stack = new Stack();
console.log(stack.push(10)); // 1
console.log(stack.first.value); // 10
console.log(stack.last.value); // 10
console.log(stack.push(100)); // 2
console.log(stack.first.value); // 100
console.log(stack.last.value); // 10
console.log(stack.push(1000)); // 3
console.log(stack.first.value); // 1000
console.log(stack.last.value); // 10

var stack2 = new Stack();
console.log(stack2.push(10)); // 1
console.log(stack2.size); // 1
console.log(stack2.push(100)); // 2
console.log(stack2.size); // 2
console.log(stack2.push(1000)); // 3
console.log(stack2.size); // 3
